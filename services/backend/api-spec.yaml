openapi: 3.0.0
info:
  title: DeployStack Backend API
  description: API documentation for DeployStack Backend
  version: 0.20.5
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: auth_session
  schemas: {}
paths:
  /:
    get:
      responses:
        "200":
          description: Default Response
  /api/db/status:
    get:
      summary: Get database status
      tags:
        - Database
      description: Returns the current status of the database configuration and
        initialization. This endpoint checks whether the database has been
        configured and properly initialized.
      responses:
        "200":
          description: Database status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  configured:
                    type: boolean
                  initialized:
                    type: boolean
                  dialect:
                    type: string
                    enum:
                      - sqlite
                    nullable: true
                required:
                  - configured
                  - initialized
                  - dialect
                additionalProperties: false
                description: Database status information
        "500":
          description: Internal Server Error - Failed to fetch database status
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing what went wrong.
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error - Failed to fetch database status
  /api/db/setup:
    post:
      summary: Setup database
      tags:
        - Database
      description: Initializes and configures the database for the DeployStack
        application. This endpoint sets up the database schema, creates
        necessary tables, and initializes database-dependent services. Can only
        be called once - subsequent calls will return a conflict error.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - sqlite
              required:
                - type
              additionalProperties: false
        required: true
      responses:
        "200":
          description: Database setup completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message indicating the database setup status.
                  restart_required:
                    type: boolean
                    description: Indicates whether a server restart is required to complete the
                      setup.
                required:
                  - message
                  - restart_required
                additionalProperties: false
                description: Database setup completed successfully
        "400":
          description: Bad Request - Invalid input or unsupported database type
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing what went wrong.
                  details:
                    type: array
                    description: Additional error details (validation errors).
                required:
                  - error
                additionalProperties: false
                description: Bad Request - Invalid input or unsupported database type
        "409":
          description: Conflict - Database setup has already been performed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Message indicating that database setup has already been performed.
                required:
                  - message
                additionalProperties: false
                description: Conflict - Database setup has already been performed
        "500":
          description: Internal Server Error - Database setup failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing what went wrong.
                  details:
                    type: array
                    description: Additional error details (validation errors).
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error - Database setup failed
  /api/roles:
    get:
      responses:
        "200":
          description: Default Response
    post:
      responses:
        "200":
          description: Default Response
  /api/roles/{id}:
    get:
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
      responses:
        "200":
          description: Default Response
    put:
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
      responses:
        "200":
          description: Default Response
    delete:
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
      responses:
        "200":
          description: Default Response
  /api/roles/permissions:
    get:
      responses:
        "200":
          description: Default Response
  /api/users:
    get:
      summary: List all users
      tags:
        - Users
      description: Retrieves a list of all users in the system. Requires admin permissions.
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Successfully retrieved users list
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        username:
                          type: string
                        email:
                          type: string
                        auth_type:
                          type: string
                        first_name:
                          type: string
                          nullable: true
                        last_name:
                          type: string
                          nullable: true
                        github_id:
                          type: string
                          nullable: true
                        role_id:
                          type: string
                          nullable: true
                        role:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            permissions:
                              type: array
                              items:
                                type: string
                          required:
                            - id
                            - name
                            - permissions
                          additionalProperties: false
                      required:
                        - id
                        - username
                        - email
                        - auth_type
                        - first_name
                        - last_name
                        - github_id
                        - role_id
                      additionalProperties: false
                    description: Array of users
                required:
                  - success
                  - data
                additionalProperties: false
                description: Successfully retrieved users list
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Unauthorized - Authentication required
        "403":
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Forbidden - Insufficient permissions
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error
  /api/users/{id}:
    get:
      summary: Get user by ID
      tags:
        - Users
      description: Retrieves a specific user by their ID. Users can access their own
        profile, admins can access any user.
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
          description: User ID
      security:
        - cookieAuth: []
      responses:
        "200":
          description: User data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  auth_type:
                    type: string
                  first_name:
                    type: string
                    nullable: true
                  last_name:
                    type: string
                    nullable: true
                  github_id:
                    type: string
                    nullable: true
                  role_id:
                    type: string
                    nullable: true
                  role:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      permissions:
                        type: array
                        items:
                          type: string
                    required:
                      - id
                      - name
                      - permissions
                    additionalProperties: false
                required:
                  - id
                  - username
                  - email
                  - auth_type
                  - first_name
                  - last_name
                  - github_id
                  - role_id
                additionalProperties: false
                description: User data
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Unauthorized - Authentication required
        "403":
          description: Forbidden - Cannot access this user
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Forbidden - Cannot access this user
        "404":
          description: Not Found - User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Not Found - User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error
    put:
      summary: Update user
      tags:
        - Users
      description: Updates user information. Users can update their own profile,
        admins can update any user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 1
                email:
                  type: string
                  format: email
                first_name:
                  type: string
                last_name:
                  type: string
                role_id:
                  type: string
              additionalProperties: false
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
          description: User ID
      security:
        - cookieAuth: []
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
                      auth_type:
                        type: string
                      first_name:
                        type: string
                        nullable: true
                      last_name:
                        type: string
                        nullable: true
                      github_id:
                        type: string
                        nullable: true
                      role_id:
                        type: string
                        nullable: true
                      role:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          permissions:
                            type: array
                            items:
                              type: string
                        required:
                          - id
                          - name
                          - permissions
                        additionalProperties: false
                    required:
                      - id
                      - username
                      - email
                      - auth_type
                      - first_name
                      - last_name
                      - github_id
                      - role_id
                    additionalProperties: false
                    description: User data
                  message:
                    type: string
                    description: Success message
                required:
                  - success
                additionalProperties: false
                description: User updated successfully
        "400":
          description: Bad Request - Validation error or invalid role ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Bad Request - Validation error or invalid role ID
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Unauthorized - Authentication required
        "403":
          description: Forbidden - Cannot update this user or change own role
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Forbidden - Cannot update this user or change own role
        "404":
          description: Not Found - User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Not Found - User not found
        "409":
          description: Conflict - Username or email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Conflict - Username or email already exists
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error
    delete:
      summary: Delete user
      tags:
        - Users
      description: Deletes a user from the system. Requires admin permissions. Users
        cannot delete themselves.
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
          description: User ID
      security:
        - cookieAuth: []
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful
                  message:
                    type: string
                    description: Success message
                required:
                  - success
                  - message
                additionalProperties: false
                description: User deleted successfully
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Unauthorized - Authentication required
        "403":
          description: Forbidden - Insufficient permissions or cannot delete own account
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Forbidden - Insufficient permissions or cannot delete own account
        "404":
          description: Not Found - User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Not Found - User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error
  /api/users/{id}/role:
    put:
      summary: Assign role to user
      tags:
        - Users
      description: Assigns a role to a specific user. Requires admin permissions.
        Users cannot change their own role.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role_id:
                  type: string
                  minLength: 1
              required:
                - role_id
              additionalProperties: false
        required: true
      parameters:
        - schema:
            type: string
          in: path
          name: id
          required: true
          description: User ID
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Role assigned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
                      auth_type:
                        type: string
                      first_name:
                        type: string
                        nullable: true
                      last_name:
                        type: string
                        nullable: true
                      github_id:
                        type: string
                        nullable: true
                      role_id:
                        type: string
                        nullable: true
                      role:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          permissions:
                            type: array
                            items:
                              type: string
                        required:
                          - id
                          - name
                          - permissions
                        additionalProperties: false
                    required:
                      - id
                      - username
                      - email
                      - auth_type
                      - first_name
                      - last_name
                      - github_id
                      - role_id
                    additionalProperties: false
                    description: User data
                  message:
                    type: string
                    description: Success message
                required:
                  - success
                additionalProperties: false
                description: Role assigned successfully
        "400":
          description: Bad Request - Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Bad Request - Validation error
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Unauthorized - Authentication required
        "403":
          description: Forbidden - Insufficient permissions or cannot change own role
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Forbidden - Insufficient permissions or cannot change own role
        "404":
          description: Not Found - User or role not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Not Found - User or role not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error
  /api/users/stats:
    get:
      summary: Get user statistics
      tags:
        - Users
      description: Retrieves user statistics including count by role. Requires admin
        permissions.
      security:
        - cookieAuth: []
      responses:
        "200":
          description: User statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful
                  data:
                    type: object
                    properties:
                      user_count_by_role:
                        type: object
                        additionalProperties:
                          type: number
                        description: Count of users by role
                    required:
                      - user_count_by_role
                    additionalProperties: false
                    description: User statistics data
                required:
                  - success
                  - data
                additionalProperties: false
                description: User statistics retrieved successfully
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Unauthorized - Authentication required
        "403":
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Forbidden - Insufficient permissions
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error
  /api/users/role/{roleId}:
    get:
      summary: Get users by role
      tags:
        - Users
      description: Retrieves all users with a specific role. Requires admin permissions.
      parameters:
        - schema:
            type: string
          in: path
          name: roleId
          required: true
          description: Role ID
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Users with specified role retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        username:
                          type: string
                        email:
                          type: string
                        auth_type:
                          type: string
                        first_name:
                          type: string
                          nullable: true
                        last_name:
                          type: string
                          nullable: true
                        github_id:
                          type: string
                          nullable: true
                        role_id:
                          type: string
                          nullable: true
                        role:
                          type: object
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            permissions:
                              type: array
                              items:
                                type: string
                          required:
                            - id
                            - name
                            - permissions
                          additionalProperties: false
                      required:
                        - id
                        - username
                        - email
                        - auth_type
                        - first_name
                        - last_name
                        - github_id
                        - role_id
                      additionalProperties: false
                    description: Array of users
                required:
                  - success
                  - data
                additionalProperties: false
                description: Users with specified role retrieved successfully
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Unauthorized - Authentication required
        "403":
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Forbidden - Insufficient permissions
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error
  /api/users/me:
    get:
      summary: Get current user profile
      tags:
        - Users
      description: Retrieves the profile of the currently authenticated user.
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Current user profile data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
                  auth_type:
                    type: string
                  first_name:
                    type: string
                    nullable: true
                  last_name:
                    type: string
                    nullable: true
                  github_id:
                    type: string
                    nullable: true
                  role_id:
                    type: string
                    nullable: true
                  role:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      permissions:
                        type: array
                        items:
                          type: string
                    required:
                      - id
                      - name
                      - permissions
                    additionalProperties: false
                required:
                  - id
                  - username
                  - email
                  - auth_type
                  - first_name
                  - last_name
                  - github_id
                  - role_id
                additionalProperties: false
                description: Current user profile data
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Unauthorized - Authentication required
        "404":
          description: Not Found - User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Not Found - User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error
  /api/users/me/teams:
    get:
      summary: Get current user teams
      tags:
        - Users
      description: Retrieves all teams that the currently authenticated user belongs to.
      security:
        - cookieAuth: []
      responses:
        "200":
          description: User teams retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful
                  teams:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Team ID
                        name:
                          type: string
                          description: Team name
                        slug:
                          type: string
                          description: Team slug
                        description:
                          type: string
                          nullable: true
                          description: Team description
                        owner_id:
                          type: string
                          description: Team owner ID
                        created_at:
                          type: string
                          format: date-time
                          description: Team creation date
                        updated_at:
                          type: string
                          format: date-time
                          description: Team last update date
                      required:
                        - id
                        - name
                        - slug
                        - description
                        - owner_id
                        - created_at
                        - updated_at
                      additionalProperties: false
                    description: Array of user teams
                required:
                  - success
                  - teams
                additionalProperties: false
                description: User teams retrieved successfully
        "401":
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Unauthorized - Authentication required
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message
                  details:
                    type: array
                    description: Additional error details (validation errors)
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error
  /api/settings/groups:
    get:
      responses:
        "200":
          description: Default Response
  /api/settings:
    get:
      responses:
        "200":
          description: Default Response
    post:
      responses:
        "200":
          description: Default Response
  /api/settings/{key}:
    get:
      parameters:
        - schema:
            type: string
          in: path
          name: key
          required: true
      responses:
        "200":
          description: Default Response
    put:
      parameters:
        - schema:
            type: string
          in: path
          name: key
          required: true
      responses:
        "200":
          description: Default Response
    delete:
      parameters:
        - schema:
            type: string
          in: path
          name: key
          required: true
      responses:
        "200":
          description: Default Response
  /api/settings/group/{groupId}:
    get:
      parameters:
        - schema:
            type: string
          in: path
          name: groupId
          required: true
      responses:
        "200":
          description: Default Response
  /api/settings/categories:
    get:
      responses:
        "200":
          description: Default Response
  /api/settings/search:
    post:
      responses:
        "200":
          description: Default Response
  /api/settings/bulk:
    post:
      responses:
        "200":
          description: Default Response
  /api/settings/health:
    get:
      responses:
        "200":
          description: Default Response
  /api/auth/email/register:
    post:
      summary: User registration via email
      tags:
        - Authentication
      description: Creates a new user account using email and password. The first
        registered user automatically becomes a global administrator.
        Automatically creates a session and default team for the user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 30
                  pattern: ^[a-zA-Z0-9_]+$
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                  maxLength: 100
                first_name:
                  type: string
                  maxLength: 50
                last_name:
                  type: string
                  maxLength: 50
              required:
                - username
                - email
                - password
              additionalProperties: false
        required: true
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the registration was successful
                  message:
                    type: string
                    description: Success message
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        description: User ID
                      username:
                        type: string
                        description: User's username
                      email:
                        type: string
                        format: email
                        description: User's email address
                      first_name:
                        type: string
                        nullable: true
                        description: User's first name
                      last_name:
                        type: string
                        nullable: true
                        description: User's last name
                      role_id:
                        type: string
                        description: User's role ID
                    required:
                      - id
                      - username
                      - email
                      - first_name
                      - last_name
                      - role_id
                    additionalProperties: false
                    description: Information about the registered user
                required:
                  - success
                  - message
                  - user
                additionalProperties: false
                description: User registered successfully
        "400":
          description: Bad Request - Invalid input, username taken, or email already in use
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - error
                additionalProperties: false
                description: Bad Request - Invalid input, username taken, or email already in
                  use
        "403":
          description: Forbidden - Email registration is disabled by administrator
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - error
                additionalProperties: false
                description: Forbidden - Email registration is disabled by administrator
        "500":
          description: Internal Server Error - Registration failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (false for errors)
                    default: false
                  error:
                    type: string
                    description: Error message describing what went wrong
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error - Registration failed
  /api/auth/email/login:
    post:
      summary: User login via email/password
      tags:
        - Authentication
      description: Authenticates a user using their registered identifier (email or
        username) and password. This endpoint is accessed via the
        /api/auth/email/login path due to server-level prefixing. Establishes a
        session by setting an authentication cookie.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: User's registered email address or username.
                password:
                  type: string
                  description: User's password.
              required:
                - login
                - password
              additionalProperties: false
        required: true
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Login successful. Session cookie is set.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the login operation was successful.
                  message:
                    type: string
                    description: Human-readable message about the login result.
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        description: User ID
                      email:
                        type: string
                        format: email
                        description: User's primary email address.
                      username:
                        type: string
                        nullable: true
                        description: User's username.
                      first_name:
                        type: string
                        nullable: true
                        description: User's first name.
                      last_name:
                        type: string
                        nullable: true
                        description: User's last name.
                      role_id:
                        type: string
                        nullable: true
                        description: User's role ID.
                    required:
                      - id
                      - email
                    additionalProperties: false
                    description: Basic information about the logged-in user.
                required:
                  - success
                  - message
                  - user
                additionalProperties: false
                description: Login successful. Session cookie is set.
        "400":
          description: Bad Request - Invalid input or invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (typically false for
                      errors).
                    default: false
                  error:
                    type: string
                    description: Error message.
                required:
                  - error
                additionalProperties: false
                description: Bad Request - Invalid input or invalid credentials.
        "403":
          description: Forbidden - Login is disabled by administrator.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (typically false for
                      errors).
                    default: false
                  error:
                    type: string
                    description: Error message.
                required:
                  - error
                additionalProperties: false
                description: Forbidden - Login is disabled by administrator.
        "500":
          description: Internal Server Error - An unexpected error occurred on the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the operation was successful (typically false for
                      errors).
                    default: false
                  error:
                    type: string
                    description: Error message.
                required:
                  - error
                additionalProperties: false
                description: Internal Server Error - An unexpected error occurred on the server.
  /api/auth/github/login:
    get:
      responses:
        "200":
          description: Default Response
  /api/auth/github/callback:
    get:
      responses:
        "200":
          description: Default Response
  /api/auth/logout:
    post:
      summary: User logout
      tags:
        - Authentication
      description: Invalidates the current user session and clears authentication
        cookies. This endpoint can be called even without an active session.
      security:
        - cookieAuth: []
      responses:
        "200":
          description: '{"examples":[{"success":true,"message":"Logged out
            successfully."},{"success":true,"message":"No active session to
            logout or already logged out."}]}'
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Indicates if the logout operation was successful
                  message:
                    type: string
                    description: Human-readable message about the logout result
                required:
                  - success
                  - message
                additionalProperties: false
                description: '{"examples":[{"success":true,"message":"Logged out
                  successfully."},{"success":true,"message":"No active session
                  to logout or already logged out."}]}'
              examples:
                example1:
                  value:
                    success: true
                    message: Logged out successfully.
                example2:
                  value:
                    success: true
                    message: No active session to logout or already logged out.
servers:
  - url: http://localhost:3000
    description: Server
