{
  "openapi": "3.0.0",
  "info": {
    "title": "DeployStack Backend API",
    "description": "API documentation for DeployStack Backend",
    "version": "0.20.5"
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "auth_session"
      }
    },
    "schemas": {}
  },
  "paths": {
    "/": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/users-example": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/db/status": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/db/setup": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/register": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/roles/permissions": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/users/{id}/role": {
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/users/stats": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/users/role/{roleId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "roleId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/users/me/teams": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/settings/groups": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/settings": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/settings/{key}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "key",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "key",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "key",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/settings/group/{groupId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "groupId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/settings/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/settings/search": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/settings/bulk": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/settings/health": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/auth/email/register": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/auth/email/login": {
      "post": {
        "summary": "User login via email/password",
        "tags": [
          "Authentication"
        ],
        "description": "Authenticates a user using their registered identifier (email or username) and password. This endpoint is accessed via the /api/auth/email/login path due to server-level prefixing. Establishes a session by setting an authentication cookie.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string",
                    "description": "User's registered email address or username."
                  },
                  "password": {
                    "type": "string",
                    "description": "User's password."
                  }
                },
                "required": [
                  "login",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful. Session cookie is set.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the login operation was successful."
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable message about the login result."
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "User ID"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "User's primary email address."
                        },
                        "username": {
                          "type": "string",
                          "nullable": true,
                          "description": "User's username."
                        },
                        "first_name": {
                          "type": "string",
                          "nullable": true,
                          "description": "User's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "nullable": true,
                          "description": "User's last name."
                        },
                        "role_id": {
                          "type": "string",
                          "nullable": true,
                          "description": "User's role ID."
                        }
                      },
                      "required": [
                        "id",
                        "email"
                      ],
                      "additionalProperties": false,
                      "description": "Basic information about the logged-in user."
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "user"
                  ],
                  "additionalProperties": false,
                  "description": "Login successful. Session cookie is set."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input or invalid credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the operation was successful (typically false for errors).",
                      "default": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "additionalProperties": false,
                  "description": "Bad Request - Invalid input or invalid credentials."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Login is disabled by administrator.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the operation was successful (typically false for errors).",
                      "default": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "additionalProperties": false,
                  "description": "Forbidden - Login is disabled by administrator."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - An unexpected error occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the operation was successful (typically false for errors).",
                      "default": false
                    },
                    "error": {
                      "type": "string",
                      "description": "Error message."
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "additionalProperties": false,
                  "description": "Internal Server Error - An unexpected error occurred on the server."
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/github/login": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/auth/github/callback": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "User logout",
        "tags": [
          "Authentication"
        ],
        "description": "Invalidates the current user session and clears authentication cookies. This endpoint can be called even without an active session.",
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "{\"examples\":[{\"success\":true,\"message\":\"Logged out successfully.\"},{\"success\":true,\"message\":\"No active session to logout or already logged out.\"}]}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the logout operation was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable message about the logout result"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ],
                  "additionalProperties": false,
                  "description": "{\"examples\":[{\"success\":true,\"message\":\"Logged out successfully.\"},{\"success\":true,\"message\":\"No active session to logout or already logged out.\"}]}"
                },
                "examples": {
                  "example1": {
                    "value": {
                      "success": true,
                      "message": "Logged out successfully."
                    }
                  },
                  "example2": {
                    "value": {
                      "success": true,
                      "message": "No active session to logout or already logged out."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Server"
    }
  ]
}